' Auto-generated encoder/decoder for {{TYPE_NAME}}

function {{TYPE_NAME}}Encode(message as Object) as String
    nested = invalid
    if message <> invalid then
        if GetInterface(message, "ifAssociativeArray") <> invalid then
            nested = message.Lookup("{{FIELD_NAME}}")
        else
            nested = message.{{FIELD_NAME}}
        end if
    end if

    bytes = __pb_createByteArray()
    if nested <> invalid then
        encodedChild = {{CHILD_ENCODE}}(nested)
        childBytes = __pb_fromBase64(encodedChild)
        __pb_writeVarint(bytes, {{TAG}})
        __pb_writeVarint(bytes, childBytes.Count())
        __pb_appendByteArray(bytes, childBytes)
    end if
    __pb_appendUnknownFields(bytes, message)
    return __pb_toBase64(bytes)
end function

function {{TYPE_NAME}}Decode(encoded as String) as Object
    bytes = __pb_fromBase64(encoded)
    cursor = 0
    limit = bytes.Count()
    message = {}
    while cursor < limit
        tagStart = cursor
        tagResult = __pb_readVarint(bytes, cursor)
        cursor = tagResult.nextIndex
        fieldNumber = Int(tagResult.value / 8)
        wireType = tagResult.value AND &h07
        if fieldNumber = {{FIELD_ID}} and wireType = {{WIRE_TYPE}} then
            lengthResult = __pb_readVarint(bytes, cursor)
            cursor = lengthResult.nextIndex
            childLength = lengthResult.value
            childBytes = __pb_readBytes(bytes, cursor, childLength)
            cursor = cursor + childLength
            encodedChild = __pb_byteArrayToBase64(childBytes)
            message.{{FIELD_NAME}} = {{CHILD_DECODE}}(encodedChild)
        else
            nextIndex = __pb_handleUnknownField(message, bytes, tagStart)
            if nextIndex <= tagStart then exit while
            cursor = nextIndex
        end if
    end while
    return message
end function
