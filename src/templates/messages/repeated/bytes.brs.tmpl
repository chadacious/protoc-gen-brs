' Auto-generated encoder/decoder for {{TYPE_NAME}}
function {{TYPE_NAME}}Encode(message as Object) as String
    source = invalid
    if message <> invalid then
        if GetInterface(message, "ifAssociativeArray") <> invalid then
            source = message.Lookup("{{FIELD_NAME}}")
        else
            source = message.{{FIELD_NAME}}
        end if
    end if

    bytes = __pb_createByteArray()
    if source <> invalid then
        if GetInterface(source, "ifArray") <> invalid then
            for each rawValue in source
                {{TYPE_NAME}}_writeBytesValue(bytes, rawValue)
            end for
        else
            {{TYPE_NAME}}_writeBytesValue(bytes, source)
        end if
    end if
    __pb_appendUnknownFields(bytes, message)
    return __pb_toBase64(bytes)
end function

function {{TYPE_NAME}}_writeBytesValue(bytes as Object, rawValue as Dynamic) as Void
    dataBytes = __pb_createByteArray()
    if rawValue <> invalid then
        valueType = Type(rawValue)
        if valueType = "String" or valueType = "roString" then
            dataBytes.FromBase64String(rawValue)
        else if valueType = "roByteArray" then
            __pb_appendByteArray(dataBytes, rawValue)
        end if
    end if
    __pb_writeVarint(bytes, {{TAG}})
    __pb_writeVarint(bytes, dataBytes.Count())
    __pb_appendByteArray(bytes, dataBytes)
end function

function {{TYPE_NAME}}Decode(encoded as String) as Object
    bytes = __pb_fromBase64(encoded)
    cursor = 0
    limit = bytes.Count()
    message = {}
    while cursor < limit
        tagStart = cursor
        tagResult = __pb_readVarint(bytes, cursor)
        cursor = tagResult.nextIndex
        fieldNumber = Int(tagResult.value / 8)
        wireType = tagResult.value AND &h07
        if fieldNumber = {{FIELD_ID}} and wireType = {{WIRE_TYPE}} then
            lengthResult = __pb_readVarint(bytes, cursor)
            cursor = lengthResult.nextIndex
            dataLength = lengthResult.value
            rawBytes = __pb_readBytes(bytes, cursor, dataLength)
            cursor = cursor + dataLength

            values = invalid
            if GetInterface(message, "ifAssociativeArray") <> invalid and message.DoesExist("{{FIELD_NAME}}") then
                values = message.{{FIELD_NAME}}
            end if
            if values = invalid then
                values = CreateObject("roArray", 0, true)
                message.{{FIELD_NAME}} = values
            end if
            values.Push(__pb_byteArrayToBase64(rawBytes))
        else
            nextIndex = __pb_handleUnknownField(message, bytes, tagStart)
            if nextIndex <= tagStart then exit while
            cursor = nextIndex
        end if
    end while
    return message
end function
