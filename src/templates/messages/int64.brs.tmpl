' Auto-generated encoder/decoder for {{TYPE_NAME}}
function {{TYPE_NAME}}Encode(message as Object) as String
    value = 0
    if message <> invalid then
        if GetInterface(message, "ifAssociativeArray") <> invalid then
            existing = message.Lookup("{{FIELD_NAME}}")
            if existing <> invalid then
                value = existing
            end if
        else
            candidate = message.{{FIELD_NAME}}
            if candidate <> invalid then
                value = candidate
            end if
        end if
    end if
    bytes = __pb_createByteArray()
    __pb_writeVarint(bytes, {{TAG}})
    __pb_writeVarint64(bytes, value)
    __pb_appendUnknownFields(bytes, message)
    return __pb_toBase64(bytes)
end function

function {{TYPE_NAME}}Decode(encoded as String) as Object
    bytes = __pb_fromBase64(encoded)
    cursor = 0
    limit = bytes.Count()
    message = {}
    while cursor < limit
        tagStart = cursor
        tagResult = __pb_readVarint(bytes, cursor)
        cursor = tagResult.nextIndex
        fieldNumber = Int(tagResult.value / 8)
        wireType = tagResult.value AND &h07
        if fieldNumber = {{FIELD_ID}} and wireType = {{WIRE_TYPE}} then
            valueResult = __pb_readVarint64(bytes, cursor)
            cursor = valueResult.nextIndex
            message.{{FIELD_NAME}} = __pb_toSignedInt64String(valueResult.value)
        else
            nextIndex = __pb_handleUnknownField(message, bytes, tagStart)
            if nextIndex <= tagStart then exit while
            cursor = nextIndex
        end if
    end while
    return message
end function
